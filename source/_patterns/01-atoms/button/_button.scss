$_config_schemes: (
  base: (
    default: primary,
    default-hover: primary-dark,
    default-active: primary-darker,
    default-focus: primary,
    disabled: $theme-color-disabled,
    secondary: secondary,
    secondary-hover: secondary-dark,
    secondary-active: secondary-darker,
    outline: "blue-60v",
    outline-hover: "blue-70v",
    outline-hover-text: "white",
    outline-active: "blue-80",
    outline-active-text: "white",
    outline-focus: "default",
    outline-focus-text: "blue-60v",
    outline-border-width: 2px,
    outline-border-color: #005ea2,
    outline-border-color-hover: #005ea2,
    outline-border-color-active: #005ea2,
    outline-disabled: #c9c9c9,
    outline-disabled-text: $theme-color-disabled,
    external: secondary,
    external-hover: secondary-dark,
    external-active: secondary-darker,
    external-focus: secondary,
    inverse: secondary,
    inverse-hover: secondary-dark,
    inverse-active: secondary-darker,
    cta-text: primary,
    cta-text-hover: primary-vivid,
    cta-text-active: primary-dark,
    cta-icon: secondary,
    cta-icon-hover: secondary-light,
    cta-icon-active: secondary-dark,
    cta-link: uppercase,
    cta-link-font-size: 7,
    cta-link-letterspace: 1.8px,
    inline-icon: primary,
    padding: 2,
    font-size: null,
  ),
  local: (
    cta-link: uppercase,
  ),
  pro: (
    default: "blue-60v",
    default-hover: "blue-50",
    default-active: "blue-50",
    default-focus: "blue-50",
    disabled: $theme-color-disabled-light,
    outline: "blue-60v",
    outline-hover: "default",
    outline-hover-text: "blue-60v",
    outline-active: "default",
    outline-active-text: "blue-60v",
    outline-focus: "blue-5v",
    outline-focus-text: "blue-60v",
    outline-disabled: #adadad,
    outline-disabled-text: $theme-color-disabled-dark,
    outline-border-width: 1px,
    outline-border-color: #2378c3,
    outline-border-color-hover: #73b3e7,
    outline-border-color-active: #73b3e7,
    external: primary,
    external-hover: primary-dark,
    external-active: primary-darker,
    external-focus: primary,
    cta-text: $theme-link-color,
    cta-text-hover: $theme-link-hover-color,
    cta-text-active: $theme-link-active-color,
    cta-icon: $theme-link-color,
    cta-icon-hover: $theme-link-hover-color,
    cta-icon-active: $theme-link-active-color,
    cta-link: none,
    cta-link-font-size: 5,
    cta-link-letterspace: normal,
    padding: 1,
    font-size: 5,
  ),
);

$_config: map-merge-by-keys($_config_schemes, base, $_config_schemes, $scheme);

%jcc-button {
  // Using @extend here adds a lot of unexpected css due to other
  // USWDS touching `.usa-button` in one form or another.
  // Specifically, the USWDS `nav-list` mixin uses `a:not(.usa-button)`.
  // @extend .usa-button;

  @include border-box-sizing;
  @include u-display(inline-block);
  @include u-width(full);
  @include u-margin-right(1);
  @include u-padding-y(map-get($_config, padding));
  @include u-padding-x(4);
  @include u-border-width(0);
  @include u-radius($theme-button-border-radius);
  @include typeset($theme-button-font-family, map-get($_config, font-size), 1);
  @include u-font-weight(normal);
  @include u-line-height(ui, 2);
  @include u-text-align(center);
  @include u-text-decoration(no-underline);
  @include u-cursor(pointer);
  letter-spacing: 0.17px;
  appearance: none;

  @include at-media(mobile-lg) {
    @include u-width(auto);
  }

  &:not([disabled]):focus,
  &:not([disabled]).usa-focus {
    outline-offset: units(0.5);
  }

  &:hover,
  &.jcc-button--hover {
    border-bottom: 0;
    text-decoration: none;
  }

  &:disabled {
    @include button-disabled;
    @include u-bg(map-get($_config, disabled));

    &:hover {
      @include u-bg(map-get($_config, disabled));
    }
  }
}

%jcc-button-unstyled {
  @include button-unstyled;
  @include u-padding(0);
  @include link-colors(
    (
      default: $theme-link-color,
      hover: $theme-link-hover-color,
      active: $theme-link-active-color,
    )
  );
  @include u-bg("transparent");
  @include u-cursor(pointer);
}

%jcc-button-external {
  &,
  &:visited {
    @include u-display(inline-flex);
    @include u-justify-content(justify-center);
    @include u-align-items(align-center);
    @include u-position(relative);
    @include u-padding-y(1.5);
    @include u-radius(pill);
    @include u-font(sans, xs);
    @include set-text-and-bg(map-get($_config, external), $context: $button-context);
    font-weight: font-weight(normal);
    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
  }

  &:hover,
  &.jcc-button--hover {
    @include set-text-and-bg(map-get($_config, external-hover), $context: $button-context);
  }

  &:active,
  &.jcc-button--active {
    @include set-text-and-bg(map-get($_config, external-active), $context: $button-context);
  }

  &:focus,
  &.usa-focus {
    @include set-text-and-bg(map-get($_config, external-focus), $context: $button-context);
  }

  &::after {
    @include u-display(inline-block);
    @include u-position(relative);
    @include u-width(2);
    @include u-height(2);
    @include u-margin-left(1.5);
    @include u-top(-1px);
    flex-shrink: 0;
    content: "";
    mask-image: url("../icons/fa/external-link.svg");
    mask-size: contain;
    mask-repeat: no-repeat;
    @include u-bg("white");
  }

  svg.ext,
  svg.mailto,
  span[class^="fa"],
  span[class*="fa"] {
    display: none;
  }
}

%jcc-inline-icon-link {
  @include u-position(relative);
  @include u-margin-right(2px);

  &:focus {
    z-index: 1;
  }

  &::after {
    @include u-position(relative);
    @include u-display(inline-block);
    @include u-top(1px);
    @include u-margin-left(0.5);
    @include u-bg(map-get($_config, inline-icon));
    flex-shrink: 0;
    width: 17px;
    height: 17px;
    content: "";
    mask-size: contain;
    mask-repeat: no-repeat;
  }

  svg.ext,
  svg.mailto,
  span[class^="fa"],
  span[class*="fa"] {
    display: none;
  }
}

.jcc-button--primary {
  @extend %jcc-button;

  &,
  &:visited {
    @include set-text-and-bg(map-get($_config, default), $context: $button-context);
  }

  &:hover,
  &.jcc-button--hover {
    @include set-text-and-bg(map-get($_config, default-hover), $context: $button-context);
  }

  &:active,
  &.jcc-button--active {
    @include set-text-and-bg(map-get($_config, default-active), $context: $button-context);
  }

  &:focus,
  &.usa-focus {
    @include set-text-and-bg(map-get($_config, default-focus), $context: $button-context);
  }

  &.jcc-button--unstyled {
    @extend %jcc-button-unstyled;
  }

  &:disabled {
    @include u-text(gray-70);
  }

  &.ext {
    @extend %jcc-button-external;
  }

  svg {
    @include u-margin-left(1);
    fill: white;
  }
}

.jcc-button--secondary {
  @extend %jcc-button;

  &,
  &:visited {
    @include set-text-and-bg(map-get($_config, secondary), $context: $button-context);
  }

  &:hover,
  &.jcc-button--hover {
    @include set-text-and-bg(map-get($_config, secondary-hover), $context: $button-context);
  }

  &:active,
  &.jcc-button--active {
    @include set-text-and-bg(map-get($_config, secondary-active), $context: $button-context);
  }

  &:focus,
  &.usa-focus {
    @include set-text-and-bg(map-get($_config, secondary), $context: $button-context);
  }

  &.jcc-button--unstyled {
    @extend %jcc-button-unstyled;
  }

  &:disabled {
    @include u-text(gray-70);
  }

  &.ext {
    @extend %jcc-button-external;
  }
}

.jcc-button--outline {
  @extend %jcc-button;
  @extend .usa-button--outline;
  //@include u-color(map-get($_config, outline-text));
  box-shadow: inset 0 0 0 map-get($_config, outline-border-width)
    map-get($_config, outline-border-color);

  &:hover,
  &.jcc-button--hover {
    @include set-text-and-bg(map-get($_config, outline-hover), $context: $button-context);
    @include u-color(map-get($_config, outline-hover-text));
    box-shadow: inset 0 0 0 map-get($_config, outline-border-width)
      map-get($_config, outline-border-color-hover);
  }

  &:active,
  &.jcc-button--active {
    @include set-text-and-bg(map-get($_config, outline-active), $context: $button-context);
    @include u-color(map-get($_config, outline-active-text));
    box-shadow: inset 0 0 0 map-get($_config, outline-border-width)
      map-get($_config, outline-border-color-active);
  }

  &:focus,
  &.usa-focus {
    @include set-text-and-bg(map-get($_config, outline-focus), $context: $button-context);
    @include u-color(map-get($_config, outline-focus-text));
    box-shadow: inset 0 0 0 map-get($_config, outline-border-width)
      map-get($_config, outline-border-color-active);
  }

  &:disabled,
  &.jcc-button--disabled {
    @extend .usa-button--outline:disabled;
    @include u-bg("transparent");
    @include u-color(map-get($_config, outline-disabled-text));
    box-shadow: inset 0 0 0 map-get($_config, outline-border-width)
      map-get($_config, outline-disabled);

    &:hover {
      @include u-bg("transparent");
      box-shadow: inset 0 0 0 map-get($_config, outline-border-width)
        map-get($_config, outline-disabled);
    }
  }
}

.jcc-button--unstyled {
  @extend %jcc-button-unstyled;
  box-shadow: none;
}

.jcc-button--inverse {
  @extend %jcc-button;

  &,
  &:visited {
    @include set-text-and-bg("white", primary, $context: $button-context);
  }

  &:hover,
  &.jcc-button--hover {
    @include set-text-and-bg(accent-warm, $context: $button-context);
  }

  &:active,
  &.jcc-button--active {
    @include set-text-and-bg(accent-warm-dark, $context: $button-context);
  }

  &.jcc-button--unstyled {
    @extend %jcc-button-unstyled;
    @include link-colors(
      (
        default: $theme-link-reverse-color,
        hover: $theme-link-reverse-hover-color,
        active: $theme-link-reverse-active-color,
      )
    );
  }

  &:disabled {
    @include u-text(gray-70);
  }

  &.ext {
    @extend %jcc-button-external;
  }
}

.usa-prose a.file:not(.jcc-button--primary):not(.jcc-button--cta-link),
.jcc-button--file-link,
a[data-entity-type="file"],
a[data-entity-type="media"] {
  @extend %jcc-inline-icon-link;

  &::after {
    mask-image: url("../icons/fa/file.svg");
  }
}

a.ext {
  svg.ext,
  span[class^="fa"],
  span[class*="fa"] {
    display: none;
  }
}

a.mailto {
  svg.mailto,
  span[class^="fa"],
  span[class*="fa"] {
    display: none;
  }
}

// This is a plain-text link
.usa-prose a.ext:not(.jcc-button--primary):not(.jcc-button--cta-link),
.jcc-button--external-link {
  @extend %jcc-inline-icon-link;

  &::after {
    mask-image: url("../icons/fa/external-link.svg");
  }
}

// This is a plain-text link
.usa-prose a.mailto:not(.jcc-button--primary):not(.jcc-button--cta-link),
.jcc-button--mailto-link {
  @extend %jcc-inline-icon-link;

  &::after {
    top: 3px;
    mask-image: url("../icons/fa/envelope.svg");
  }
}

a.jcc-button--cta-link {
  @extend %jcc-button;
  @include u-display(inline-flex);
  @include u-flex(justify);
  @include u-align-items(align-center);
  @include u-margin-right(0);
  @include u-padding(0);
  @include u-bg("transparent");
  @include u-font-weight(normal);
  @include u-text-align(left);
  font-size: font-size("sans", map-get($_config, cta-link-font-size));
  letter-spacing: map-get($_config, cta-link-letterspace);
  text-transform: (map-get($_config, cta-link));
  text-decoration: none;

  &,
  &:visited {
    @include u-color(map-get($_config, cta-text));
  }

  &:hover,
  &.jcc-button--hover {
    @include u-color(map-get($_config, cta-text-hover));
    text-decoration: none;

    &::after {
      @include u-bg(map-get($_config, cta-icon-hover));
    }
  }

  &:active,
  &.jcc-button--active {
    @include u-color(map-get($_config, cta-text-active));
    text-decoration: none;

    &::after {
      @include u-bg(map-get($_config, cta-icon-active));
    }
  }

  &::after {
    @include u-display(inline-block);
    @include u-width(2.5);
    @include u-height(2.5);
    @include u-margin-left(1.5);
    @include u-bg(map-get($_config, cta-icon));
    flex-shrink: 0;
    content: "";
    mask-image: url("../icons/fa/arrow-right.svg");
    mask-size: contain;
    mask-repeat: no-repeat;
  }

  &.ext {
    &::after {
      @include u-position(relative);
      @include u-top(-1px);
      @include u-width(2.5);
      @include u-height(2.5);
      @include u-margin-left(1.5);
      mask-image: url("../icons/fa/external-link.svg");
    }
  }

  &.file {
    &::after {
      @include u-position(relative);
      @include u-width(2.5);
      @include u-height(2.5);
      @include u-top(-1px);
      mask-image: url("../icons/fa/file.svg");
    }
  }

  svg.ext,
  svg.mailto,
  span[class^="fa"],
  span[class*="fa"] {
    display: none;
  }
}

.jcc-button__text--with-icon {
  @include u-position(relative);
  @include u-bottom(1);
}

.jcc-button--icon-top {
  display: inline-grid;

  svg {
    @include u-order(1);
    @include u-margin-x(auto);
    @include u-maxh(5);
    margin-bottom: 0.3rem;
  }

  .jcc-button__text--with-icon {
    @include u-order(2);
  }
}

.jcc-links__buttons {
  ul {
    @include u-margin-top(0);
    @include unstyled-list();
  }
}
